/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'SAMPLESHEET_CHECK' {
		publishDir = [
            path: { "${params.outdir}/pipeline_info/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'SAMTOOLS_FAIDX' {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS/"},
            mode: params.publish_dir_mode,
        ]
    }

	withName: 'FASTQC_RAW_SHORT' {
        ext.args = '--quiet'
		publishDir = [
            path: { "${params.outdir}/FASTQC/Raw_Reads" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'NANOPLOT_RAW_LONG' {
        publishDir = [
            path: { "${params.outdir}/NANOPLOT/Raw_Reads/${meta.id}" },
            mode: params.publish_dir_mode
        ]
    }
	
	withName: 'FASTP_SHORT' {
        ext.args = [
            "--cut_front",
            "-W 4",
            "-M 15",
            "--length_required 30",
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/FASTP/Short_Reads/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.{html,json}"
            ],
            [
                path: { "${params.outdir}/FASTP/Short_Reads/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz"
            ]
        ]
    }

    withName: 'FASTP_LONG' {
        ext.args = [
            "--cut_front",
            "--cut_tail",
            "-W 6",
            "-e 15",
            "-M 12",
            "-y",
            "--length_required 200",
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/FASTP/Long_Reads/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.{html,json}"
            ],
            [
                path: { "${params.outdir}/FASTP/Long_Reads/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz"
            ]
        ]
    }

    withName: 'FASTQC_SHORT_TRIMMED' {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/FASTQC/Trimmed_Reads" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'NANOPLOT_LONG_TRIMMED' {
        publishDir = [
            path: { "${params.outdir}/NANOPLOT/Trimmed_Reads/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MINIMAP2_ALIGN_SHORT' {
        publishDir = [
            path: "${params.outdir}/ALIGNMENT/",
            mode: "copy",
            pattern: '*.{bam,bai}'
        ]
    }

    withName: 'MINIMAP2_ALIGN_LONG' {
        publishDir = [
            path: "${params.outdir}/ALIGNMENT/",
            mode: "copy",
            pattern: '*.{bam,.bai}'
        ]
    }

    withName: 'QUALIMAP_BAMQC' {
        publishDir = [
            path: { "${params.outdir}/BAMQC/Qualimap" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'REHEADER_BAM' {
        publishDir = [
            path: { "${params.outdir}/TRIMMED_SORTED_BAM/" },
            mode: "copy",
            pattern: '*.{bam,bai}'
        ]
    }

    withName: 'SAMTOOLS_AMPLICONCLIP' {
        ext.args = '--hard-clip --both-ends --clipped --no-excluded --tolerance 10'
        ext.prefix = { "${meta.id}.ampliconclip" }
        publishDir = [
            path: { "${params.outdir}/PRIMER_TRIMMING/AmpliconClip_Unsorted"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'IVAR_TRIM' {
        ext.args = '-m 30 -q 20 -e -s 4 ' 
        ext.prefix = { "${meta.id}.IVAR_trim" }
        publishDir = [
            path: { "${params.outdir}/PRIMER_TRIMMING/IVAR" },
            mode: params.publish_dir_mode,
            pattern: '*.{tsv,bam,log}'
        ]
    }

    withName: 'SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.trimmed.sorted" }
        publishDir = [
            path: { "${params.outdir}/TRIMMED_SORTED_BAM/" },
            mode: params.publish_dir_mode,
            pattern: "*.bam"
        ]
    }

    withName: 'SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/TRIMMED_SORTED_BAM/" },
            mode: params.publish_dir_mode,
            pattern: "*.bai"
        ]
    }

    withName: 'SAMTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS/" },
            mode: params.publish_dir_mode,
            pattern: "*.stats"
        ]
    }

    withName: 'SAMTOOLS_IDXSTATS' {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS/" },
            mode: params.publish_dir_mode,
            pattern: "*.idxstats"
        ]
    }

    withName: 'SAMTOOLS_FLAGSTAT' {
        publishDir = [
            path: { "${params.outdir}/SAMTOOLS/" },
            mode: params.publish_dir_mode,
            pattern: "*.flagstat"
        ]
    }

    withName: 'IVAR_VARIANTS' {
        ext.args = '-t 0.01 -q 20'
        ext.args2 = '-aa -A -d 600000 -Q 20 -q 0 -B'
        publishDir = [
            path: { "${params.outdir}/VARIANTS/IVAR/VarCalls" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FREYJA_VARIANTS' {
        ext.args = "--minq 20 --annot \"${params.gff3}\" --varthresh \"${params.varthresh}\" "
        publishDir = [
            path: { "${params.outdir}/VARIANTS/FREYJA/VarCalls" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv,csv}"
        ]
    }

    withName: 'FREYJA_DEMIX' {
        ext.args = '--covcut 10 --confirmedonly'
        publishDir = [
            path: { "${params.outdir}/VARIANTS/FREYJA/Demix" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv,csv}"
        ]
    }

    withName: 'FREYJA_UPDATE' {
        publishDir = [
            path: { "${params.outdir}/VARIANTS/FREYJA/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'MULTIQC' {
        publishDir = [
            path: { "${params.outdir}/MULTIQC" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}
