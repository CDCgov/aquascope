/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

	withName: 'FASTQC_RAW_SHORT' {
        ext.args = '--quiet'
		publishDir = [
            path: { "${params.outdir}/fastqc_raw_short" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'FASTQC_RAW_LONG' {
        ext.args = '--quiet'
		publishDir = [
            path: { "${params.outdir}/fastqc_raw_long" },
            mode: params.publish_dir_mode,
        ]
    }
	
	withName: 'FASTP_SHORT' {
        ext.args = [
            "-q 15",
            "--cut_front",
            "--cut_tail",
            "--cut_mean_quality 20",
            "--length_required 30",
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/QC_reads/fastp_short/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.{html,json}"
            ],
            [
                path: { "${params.outdir}/QC_reads/fastp_short/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz"
            ]
        ]
    }

    withName: 'FASTP_LONG' {
        ext.args = [
            "-q 10",
            "-l 200",
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/QC_reads/fastp_long/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.{html,json}"
            ],
            [
                path: { "${params.outdir}/QC_reads/fastp_long/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz"
            ]
        ]
    }

    withName: 'FASTQC_TRIMMED' {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/fastqc_trimmed" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'MINIMAP2_ALIGN' {
        publishDir = [
            path: "${params.outdir}/minimap2",
            mode: "copy",
            pattern: "*.{bam,bai}"
        ]
    }
    
    withName: 'IVAR_TRIM' {
        ext.args = [
            '-m 30 -q 20',
            params.ivar_trim_noprimer ? '' : '-e',
            params.ivar_trim_offset   ? "-x ${params.ivar_trim_offset}" : ''
        ].join(' ').trim()
        ext.prefix = { "${meta.id}.ivar_trim" }
        publishDir = [
            path: { "${params.outdir}/variants/minimap2/log" },
            mode: params.publish_dir_mode,
            pattern: '*.log'
        ]
    }

    withName: 'SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.ivar_trim.sorted" }
        publishDir = [
            path: { "${params.outdir}/variants/minimap2" },
            mode: params.publish_dir_mode,
            pattern: "*.bam"
        ]
    }

    withName: 'SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/variants/minimap2" },
            mode: params.publish_dir_mode,
            pattern: "*.bai"
        ]
    }

    withName: 'IVAR_VARIANTS' {
        ext.args = '-t 0.25 -q 20 -m 10'
        ext.args2 = '--ignore-overlaps --count-orphans --no-BAQ --max-depth 0 --min-BQ 0'
        publishDir = [
            path: { "${params.outdir}/variants/ivar" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FREYJA_VARIANTS' {
        publishDir = [
            path: { "${params.outdir}/variants/freyja/variants" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv,csv}"
        ]
    }
    withName: 'FREYJA_DEMIX' {
        publishDir = [
            path: { "${params.outdir}/variants/freyja/demix" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv,csv}"
        ]
    }
    withName: 'FREYJA_BOOT' {
        ext.args = '--boxplot PDF'
        publishDir = [
            path: { "${params.outdir}/variants/freyja/bootstrap" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv,csv,pdf}"
        ]
    }
    withName: 'FREYJA_UPDATE' {
        publishDir = [
            path: { "${params.outdir}/variants/freyja/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}