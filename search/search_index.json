{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Background","text":"<p>This project is a successor to the C-WAP pipeline and is intended to process SARS-CoV-2 wastewater samples to determine relative variant abundance.  </p> <p>\u26a0\ufe0fWarning\u26a0\ufe0f </p> <pre><code>The results generated by this pipeline are not CLIA certified and should not be considered diagnostic.\n</code></pre>"},{"location":"#introduction","title":"Introduction","text":"<p>CDCgov/aquascope is a bioinformatics best-practice pipeline for early detection of SARS-COV variants of concern, sequenced throughshotgun metagenomic sequencing, from wastewater.</p> <p>The pipeline is built using Nextflow, a workflow tool to run tasks across multiple compute infrastructures in a very portable manner. It uses Docker/Singularity containers making installation trivial and results highly reproducible. </p>"},{"location":"#pipeline-summary","title":"Pipeline summary","text":"<ol> <li>Read QC: <code>FastQC</code></li> <li>Trimming reads: <code>Fastp</code></li> <li>Aligning short reads: <code>Minimap2</code></li> <li>Freyja Variant classification: <code>Freyja</code></li> <li>Present QC for raw reads: <code>MultiQC</code></li> </ol>"},{"location":"user-guide/contributions/","title":"Contributions","text":"<p><code>Aquascope</code> was largely developed by OAMD's SciComp Team, with inputs from NWSS and the DCIPHER Team at Palantir:</p> <ul> <li>Boddapati, A.</li> <li>Hunter, S.</li> <li>Sevilla, S.</li> <li>Chavan, S.</li> <li>Caravas, J.</li> <li>Cornforth, D.</li> <li>Yoder, J.</li> <li>Morrison, S.</li> </ul>"},{"location":"user-guide/getting-started/","title":"Getting Started","text":"<p>The pipeline is built using Nextflow as it's workflow manager.</p>"},{"location":"user-guide/getting-started/#entry-points","title":"Entry Points","text":"<p>Currently, there are 3 entrypoints for the Aquascope pipeline</p> <ol> <li><code>QUALITY_ALIGN</code>: for executing quality control, quality reporting, and alignment</li> <li><code>FREYJA_ONLY</code>: for executing <code>freyja</code> sub-workflow, including variant calling and abundance estimations<ul> <li>Requires aligned and trimmed BAM files as input</li> </ul> </li> <li><code>AQUASCOPE</code>: for executing both <code>QUALITY_ALIGN</code> and <code>FREYJA_ONLY</code> as END-TO-END analysis</li> </ol>"},{"location":"user-guide/getting-started/#processes","title":"Processes","text":"<ul> <li>FastQC gives general quality metrics about your sequenced reads. It provides information about the quality score distribution across your reads, per base sequence content (%A/T/G/C), adapter contamination and overrepresented sequences. For further reading and documentation see the FastQC help pages.</li> <li>NanoPlot gives general quality metrics about your sequenced reads. its a Plotting tool for long read sequencing data and alignments.</li> <li>Fastp A tool designed to provide fast all-in-one preprocessing for FastQ files. This tool is developed in C++ with multithreading supported to afford high performance.</li> <li>Qualimap Qualimap examines sequencing alignment data in SAM/BAM files according to the features of the mapped reads and provides an overall view of the data that helps to the detect biases in the sequencing and/or mapping of the data and eases decision-making for further analysis.</li> <li>Minimap2 Minimap2 is a versatile sequence alignment program that aligns DNA or mRNA sequences against a large reference database. Typical use cases include: (1) mapping PacBio or Oxford Nanopore genomic reads to the human genome; (2) finding overlaps between long reads with error rate up to ~15%; (3) splice-aware alignment of PacBio Iso-Seq or Oxford Nanopore cDNA or Direct RNA reads against a reference genome; (4) aligning Illumina single- or paired-end reads; (5) assembly-to-assembly alignment; (6) full-genome alignment between two closely related species with divergence below ~15%.</li> <li>Samtools Samtools is a suite of programs for interacting with high-throughput sequencing data.</li> <li>ivarTrim iVar uses primer positions supplied in a BED file to soft clip primer sequences from an aligned and sorted BAM file. Following this, the reads are trimmed based on a quality threshold(Default: 20)</li> <li>AmpliconClip Clips the ends of read alignments if they intersect with regions defined in a BED file. While this tool was originally written for clipping read alignment positions which correspond to amplicon primer locations it can also be used in other contexts. </li> <li>ivarVariantCalling iVar uses the output of the samtools mpileup command to call variants - single nucleotide variants(SNVs) and indels.</li> <li>Freyja Perform variant calling using samtools and iVar on a BAMFILE and generates relative lineage abundances from VARIANTS and DEPTHS.</li> <li>MultiQC is a visualization tool that generates a single HTML report summarising all samples in your project. Most of the pipeline QC results are visualised in the report and further statistics are available in the report data directory.</li> <li>Results generated by MultiQC collate pipeline QC from supported tools e.g. FastQC. The pipeline has special steps which also allow the software versions to be reported in the MultiQC output for future traceability. For more information about how to use MultiQC reports, see http://multiqc.info.</li> </ul>"},{"location":"user-guide/getting-started/#dependencies","title":"Dependencies","text":"<ol> <li> <p>Install <code>Nextflow</code> (<code>&gt;=21.04.0</code>)</p> </li> <li> <p>Install any necessary software, based on deployment strategy, visiting docs for configuration related information: </p> </li> <li> <p><code>Docker</code></p> </li> <li><code>Singularity</code></li> <li> <p><code>Conda</code> </p> </li> <li> <p>The following software is also utilized:</p> <ul> <li>python=3.9</li> <li>samtools=1.21</li> <li>fastqc=0.12.1</li> <li>nanoplot=1.41.6</li> <li>fastp=0.23.4</li> <li>fastqc=0.12.1</li> <li>qualimap=2.3</li> <li>minimap2=2.24</li> <li>multiqc=1.25.1</li> <li>freyja=1.5.2</li> </ul> </li> </ol>"},{"location":"user-guide/getting-started/#core-nextflow-arguments","title":"Core Nextflow arguments","text":"<p>NB: These options are part of Nextflow and use a single hyphen (pipeline parameters use a double-hyphen).</p>"},{"location":"user-guide/getting-started/#-profile","title":"<code>-profile</code>","text":"<p>Use this parameter to choose a configuration profile. Profiles can give configuration presets for different compute environments.</p> <p>Note that multiple profiles can be loaded, for example: <code>-profile test,docker</code> - the order of arguments is important! They are loaded in sequence, so later profiles can overwrite earlier profiles.</p> <p>If <code>-profile</code> is not specified, the pipeline will run locally and expect all software to be installed and available on the <code>PATH</code>. This is not recommended.</p> <ul> <li><code>docker</code><ul> <li>A generic configuration profile to be used with Docker</li> </ul> </li> <li><code>singularity</code><ul> <li>A generic configuration profile to be used with Singularity</li> </ul> </li> <li><code>podman</code><ul> <li>A generic configuration profile to be used with Podman</li> </ul> </li> <li><code>shifter</code><ul> <li>A generic configuration profile to be used with Shifter</li> </ul> </li> <li><code>charliecloud</code><ul> <li>A generic configuration profile to be used with Charliecloud</li> </ul> </li> <li><code>conda</code><ul> <li>A generic configuration profile to be used with Conda. Please only use Conda as a last resort i.e. when it's not possible to run the pipeline with Docker, Singularity, Podman, Shifter or Charliecloud.</li> </ul> </li> <li><code>test</code><ul> <li>A profile with a complete configuration for automated testing</li> <li>Includes links to test data so needs no other parameters</li> </ul> </li> </ul>"},{"location":"user-guide/getting-started/#-resume","title":"<code>-resume</code>","text":"<p>Specify this when restarting a pipeline. Nextflow will used cached results from any pipeline steps where the inputs are the same, continuing from where it got to previously.</p> <p>You can also supply a run name to resume a specific run: <code>-resume [run-name]</code>. Use the <code>nextflow log</code> command to show previous run names.</p>"},{"location":"user-guide/getting-started/#-c","title":"<code>-c</code>","text":"<p>Specify the path to a specific config file (this is a core Nextflow command). See the nf-core website documentation for more information.</p>"},{"location":"user-guide/getting-started/#nextflow-memory-requirements","title":"Nextflow memory requirements","text":"<p>In some cases, the Nextflow Java virtual machines can start to request a large amount of memory. We recommend adding the following line to your environment to limit this (typically in <code>~/.bashrc</code> or <code>~./bash_profile</code>):</p> <pre><code>NXF_OPTS='-Xms1g -Xmx4g'\n</code></pre>"},{"location":"user-guide/getting-started/#reproducibility","title":"Reproducibility","text":"<p>It is a good idea to specify a pipeline version when running the pipeline on your data. This ensures that a specific version of the pipeline code and software are used when you run your pipeline. If you keep using the same tag, you'll be running the same version of the pipeline, even if there have been changes to the code since.</p> <p>First, go to the CDCgov/aquascope releases page and find the latest version number - numeric only (eg. <code>3.0.0</code>). Then specify this when running the pipeline with <code>-r</code> (one hyphen) - eg. <code>-r 3.0.0</code>.</p> <p>This version number will be logged in reports when you run the pipeline, so that you'll know what you used when you look back in the future.</p>"},{"location":"user-guide/output/","title":"Output","text":"<p>This document describes the output produced by the pipeline. Most of the plots are taken from the MultiQC report, which summarises results at the end of the pipeline.</p> <p>The directories listed below will be created in the results directory after the pipeline has finished. All paths are relative to the top-level results directory.</p>"},{"location":"user-guide/output/#fastqc","title":"FASTQC","text":"<p>This folder contains FastQC reports for ILLUMINA data, both pre and post trimming. <code>Raw_Reads</code> and <code>Trimmed_Reads</code> are the output directories. - Output: Quality metrics for raw and trimmed short-read data.</p> Output files <ul> <li><code>fastqc/</code><ul> <li><code>*_fastqc.html</code>: FastQC report containing quality metrics.</li> <li><code>*_fastqc.zip</code>: Zip archive containing the FastQC report, tab-delimited data file and plot images.</li> </ul> </li> </ul>"},{"location":"user-guide/output/#nanoplot","title":"NANOPLOT","text":"<p>This folder contains NanoPlot reports for ONT data, both pre and post trimming. <code>Raw_Reads</code> and <code>Trimmed_Reads</code> are the output directories. - Output: Quality metrics for long-read data.</p> Output files  * `nanoplot/`     * `*_QualityScatterPlot_dot.html &amp;.png`: Nanoplot report containing quality metrics.     * `*WeightedHistogramReadlength.html &amp; .png`: Weighted histogram on read lengths.     * `*NonWeightedHistogramReadlength.html &amp; .png`: Non-Weighted histogram on read lengths.     * `NanoPlot-report.html`: Cumulative report of all the above metrics.     * `NanoStats.txt`: Cumulative statistics of Read lengths, read quality, basepair quality, N50 metrics."},{"location":"user-guide/output/#fastp","title":"FASTP","text":"<p>This folder contains trimmed reads from both short and long reads. - Output: Adapter trimmed reads for both long and short-read data.</p> Output files  * `fastp/`     * `*_fastp.html`: Fastp report of trimmed reads and post trimming quality metrics.     * `*_fastp.json`: json file for the above report.     * `*_fastp.fastq.gz`: a trimmed fastq file for both short and long-reads"},{"location":"user-guide/output/#qualimapbamqc","title":"Qualimap/BAMQC","text":"<p>This folder contains BAMQC reports for aligned reads. It includes quality metrics and coverage statistics for BAM files. - Output: Quality metrics and coverage statistics reports.</p> Output files  * `Bamqc/`     * `*qualimapReport.html`: Qualimap - Bamqc report of aligned BAM file.     * `*raw_data_qualimapReport`: Coverage, gc content, nucleotide content, mapping quality metrics are reported in this folder.     * `*genome_results.txt`: cumulative report containing all the above metrics."},{"location":"user-guide/output/#alignmentminimap2","title":"ALIGNMENT/MINIMAP2","text":"<p>This folder contains alignment files generated using Minimap2. - Output: Aligned reads in BAM format.</p> Output files  * `minimap2/`     * `*.bam`: Aligned bam files"},{"location":"user-guide/output/#samtools","title":"SAMTOOLS","text":"<p>This folder contains BAM file statistics and reference indexing. - Output: Statistics on each BAM file and a reference index.</p> Output files  * `Samtools/`     * `*.flagstat`: Primary statistics on aligned bam files     * `*.stats` : General statistics     * `*.reference.fasta.fai`: Reference index"},{"location":"user-guide/output/#primertrimming","title":"PRIMERTRIMMING","text":"<p>This folder contains reads with trimmed primers using <code>samtools ampliconclip</code> for ONT data and <code>ivar trim</code> for Illumina data. - Output: BAM files with primers trimmed.</p> Output files  * `iVarTrim (Illumina)`     * `*.ivar_trim.bam`: ivar trimmed bam files, the primers used here are SARS-CoV2 based.  * `AmpliconClip (Oxford Nanopore)`     * `*.ampliconclip.clipallowed.bam`: samtools amplicon clip trimmed bam files."},{"location":"user-guide/output/#variantcalling","title":"VariantCalling","text":"<p>This folder contains variant calling and demixing results using Freyja. - Output: Variant calls and demixed sequences.</p> Output files  * `iVarTrim/VarCalls`     * `*.tsv`: ivar trimmed variant calls     * `*.mpileup` : mpileup files from ivar trimmed BAM files only.  * `Freyja/VarCalls`     * `*.depth.tsv` : Basepair depth at each position.     * `*.variants.tsv` : Variant calls from both ivar and ampliconclip trimmed BAM files  * `Freyja/Demix`     * `*.tsv` : Lineage abundances of Sars-cov-2"},{"location":"user-guide/output/#multiqc","title":"MultiQC","text":"<p>This folder contains an aggregated report describing quality control results from the pipeline. - Output: MultQC report.</p> Output files  * `multiqc/`     * `multiqc_report.html`: a standalone HTML file that can be viewed in your web browser.     * `multiqc_data/`: directory containing parsed statistics from the different tools used in the pipeline.     * `multiqc_plots/`: directory containing static images from the report in various formats."},{"location":"user-guide/output/#execution-reports","title":"Execution Reports","text":"<p>This folder contains report metrics generated during the workflow execution. - Output: Execution based reports.</p> Output files  * `pipeline_info/`     * Reports generated by Nextflow: `execution_report.html`, `execution_timeline.html`, `execution_trace.txt` and `pipeline_dag.dot`/`pipeline_dag.svg`.     * Reports generated by the pipeline: `pipeline_report.html`, `pipeline_report.txt` and `software_versions.tsv`.     * Reformatted samplesheet files used as input to the pipeline: `samplesheet.valid.csv`."},{"location":"user-guide/preparing-files/","title":"Preparing Files","text":"<p>You will need to create a samplesheet with information about the samples you would like to analyse before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with a header row as shown in the examples below.</p>"},{"location":"user-guide/preparing-files/#samplesheet-input","title":"Samplesheet input","text":"<pre><code>--input '[path to samplesheet file]'\n</code></pre>"},{"location":"user-guide/preparing-files/#samplesheet-for-quality_align-or-aquascope-workflows","title":"Samplesheet for <code>QUALITY_ALIGN</code> or <code>AQUASCOPE</code> workflows","text":"<ul> <li>Create a samplesheet using the following reference: <ul> <li>Illumina example</li> <li>Oxford Nanopore example</li> <li>Ion-torrent example </li> </ul> </li> </ul> <p>Notes:</p> <ul> <li> <p>Currently, Illumina, Ion-torrent and Oxford Nanopore platforms are supported in this pipeline.</p> </li> <li> <p>Bedfiles can be a local file path or a raw.github url</p> </li> </ul> <p>The pipeline will auto-detect whether a sample is single- or paired-end using the information provided in the samplesheet. It auto-detects sequencing platform (Illumina, Ion-torrent and Oxford nanopore) and determines which set of tools have to be run. The samplesheet must have 7 columns, and have to be in the same order as the header shown below.</p> <p>A samplesheet file consisting of both single- and paired-end Illumina data may look something like the one below. This is for 2 samples.</p> <pre><code>sample,platform,fastq_1,fastq_2,lr,bam_file,bedfile\nSAMPLE1_PE,illumina,https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/illumina/amplicon/sample1_R1.fastq.gz,https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/illumina/amplicon/sample1_R2.fastq.gz,,,https://raw.githubusercontent.com/artic-network/primer-schemes/master/nCoV-2019/V3/nCoV-2019.primer.bed\nSAMPLE1_SE,illumina,https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/illumina/amplicon/sample1_R1.fastq.gz,,,,https://raw.githubusercontent.com/artic-network/primer-schemes/master/nCoV-2019/V3/nCoV-2019.primer.bed\n</code></pre> Column Description illumina nanopore iontorrent <code>sample</code> Custom sample name. This entry will be identical for multiple sequencing libraries/runs from the same sample. Spaces in sample names are automatically converted to underscores (<code>_</code>). Required Required Required <code>platform</code> Sequencing platform. This entry will determine the type of sequencing used. It is an important entry as the decision to run a set of tools is determined by this entry. (Accepted entrys: \"illumina\", \"nanopore\", \"iontorrent\") Required Required Required <code>fastq_1</code> Full path to FastQ file for Illumina short reads 1. File has to be gzipped and have the extension \".fastq.gz\" or \".fq.gz\". Required NA NA <code>fastq_2</code> Full path to FastQ file for Illumina short reads 2. File has to be gzipped and have the extension \".fastq.gz\" or \".fq.gz\". Required NA NA <code>lr</code> Full path to FastQ file for ONT long reads. File has to be gzipped and have the extension \".fastq.gz\" or \".fq.gz\". fast5 files are not expected or accepted NA Required NA <code>bam_file</code> Full path to BAM file for Ion-torrent short reads. File has to .bam strictly NA NA Required <code>bedfile</code> Full path to local bed file or rawgithub url. File has to .tsv Required Required Required"},{"location":"user-guide/preparing-files/#samplesheet-for-freyja_only-workflow","title":"Samplesheet for <code>FREYJA_ONLY</code> workflow","text":"<p>Option 1. Create a samplesheet using the following reference: </p> <pre><code>- [BAM example](../../assets/samplesheet_test_bam.csv)\n</code></pre> <p>Option 2. Create samplesheet for primer trimmed bams using the python script <code>bin/bam_to_samplesheet.py</code> <pre><code>python bin/bam_to_samplesheet.py \\\n  --directory &lt;PATH_TO_BAM_FILES&gt; \\\n  --output &lt;OUTPUT_FILE&gt;\"\n</code></pre></p> <pre><code>sample,bam_file\nSample1,test/Sample1.bam\nSample2,test/Sample2.bam\n</code></pre> Column Description <code>sample</code> Custom sample name. This entry will be identical for multiple sequencing libraries/runs from the same sample. Spaces in sample names are automatically converted to underscores (<code>_</code>). <code>bam_file</code> Full path to BAM file for Ion-torrent short reads. File has to .bam strictly"},{"location":"user-guide/preparing-files/#prepare-the-config-files","title":"Prepare the config files","text":"<p>A. <code>scicomp.config</code>: CDC specific config to run on SciComp resources.</p> <p>B. <code>test.config</code> is prepared with default parameters; update as needed</p>"},{"location":"user-guide/run/","title":"Run the pipeline","text":""},{"location":"user-guide/run/#input-requirements","title":"Input Requirements","text":"<p>To run the pipeline, the following inputs may be given at run-time: - profile (required) - entry (required) - input (required) - outdir (optional) - references file (optional) - Freyja-specific files (optional)</p> <pre><code>    nextflow run main.nf \\\n    -profile &lt;docker/singularity/podman/shifter/charliecloud/conda/institute/test&gt; \\\n    -entry &lt;QUALITY_ALIGN, FREYJA_ONLY, AQUASCOPE&gt; \\\n    --input &lt;path/to/samplesheet&gt; \\\n    --outdir &lt;path/to/out/dir&gt; \\\n    --fasta &lt;/path/to/fasta/&gt; \\\n    --freyja_barcodes &lt;path_to_barcode_file&gt; \\\n    --freyja_lineages_meta &lt;path_to_lineage_file&gt; \\\n</code></pre>"},{"location":"user-guide/run/#profile-required","title":"Profile (Required)","text":"<p>Select from any of the profiles: - docker - singularity - podman - shifter - charliecloud - conda - instutitute_specific_profiles</p> <p>Example:</p> <pre><code>    nextflow run main \\\n    -profile docker,scicomp_rosalind \\\n    -entry AQUASCOPE \\\n    --input &lt;path/to/samplesheet&gt; \\\n    --outdir &lt;path/to/out/dir&gt;\n</code></pre>"},{"location":"user-guide/run/#entry-required","title":"Entry (Required)","text":"<p>Three entry points are available within Aquascope</p> <ul> <li> <p>QUALITY_ALIGN: Runs pipeline beginning from quality control through alignment</p> </li> <li> <p>FREYJA_ONLY: Runs the pipeline beginning with BAM files through variant calling</p> </li> <li> <p>AQUASCOPE: Runs both QUALITY_ALIGN followed by FREYJA_ONLY</p> </li> </ul> <pre><code>    nextflow run main.nf \\\n    -profile &lt;docker/singularity/podman/shifter/charliecloud/conda/institute&gt; \\\n    -entry &lt;QUALITY_ALIGN, FREYJA_ONLY, AQUASCOPE&gt; \\\n    --input &lt;path/to/samplesheet&gt; \\\n    --outdir &lt;path/to/out/dir&gt; \\\n    --fasta &lt;/path/to/fasta/&gt; \\\n    --freyja_barcodes &lt;path_to_barcode_file&gt; \\\n    --freyja_lineages_meta &lt;path_to_lineage_file&gt; \\\n</code></pre>"},{"location":"user-guide/run/#samplesheet-required","title":"Samplesheet (Required)","text":"<p>Refer to the Preparing Files documentaiton for specific samplesheet-related instructions.</p> <p>Example:</p> <pre><code>    nextflow run main.nf \\\n    -profile &lt;docker/singularity/podman/shifter/charliecloud/conda/institute&gt; \\\n    -entry &lt;QUALITY_ALIGN, FREYJA_ONLY, AQUASCOPE&gt; \\\n    --input samplesheet.csv \\\n    --outdir &lt;path/to/out/dir&gt;\n</code></pre>"},{"location":"user-guide/run/#references-optional","title":"References (Optional)","text":"<p>Fasta, BED and GFF parameters are defaulted to references in the assets folder of the pipeline. To change, the <code>--fasta</code>, <code>--gff</code> and <code>--gff3</code> are available as input parameters.</p> <ul> <li> <p>NOTES:</p> <ul> <li> <p>Docker isn't supported on CDC (Rosalind) infrastructure.</p> </li> <li> <p>BED file is used for QUALIMAP-BAMQC, GFF in GFF3 format for FREYJA variant calling </p> </li> </ul> </li> </ul> <p>Example:  <pre><code>    nextflow run main.nf \\\n    -profile &lt;docker/singularity/podman/shifter/charliecloud/conda/institute&gt; \\\n    -entry &lt;QUALITY_ALIGN, FREYJA_ONLY, AQUASCOPE&gt; \\\n    --input &lt;path/to/samplesheet&gt; \\\n    --outdir &lt;path/to/out/dir&gt; \\\n    --fasta reference.fasta\n</code></pre></p>"},{"location":"user-guide/run/#freyja-curated-lineages-barcodes","title":"Freyja Curated Lineages / Barcodes","text":"<p>Users can supply saved freyja-curated lineages and barcodes:</p> <pre><code>    nextflow run main.nf \\\n    -profile &lt;docker/singularity/podman/shifter/charliecloud/conda/institute&gt; \\\n    -entry &lt;QUALITY_ALIGN, FREYJA_ONLY, AQUASCOPE&gt; \\\n    --input &lt;path/to/samplesheet&gt; \\\n    --outdir &lt;path/to/out/dir&gt; \\\n    --freyja_barcodes &lt;path_to_barcode_file&gt; \\\n    --freyja_lineages_meta &lt;path_to_lineage_file&gt;\n</code></pre>"},{"location":"user-guide/test-info/","title":"Test Information","text":"<p>Welcome to the Aquascope Pipeline Tutorial!</p>"},{"location":"user-guide/test-info/#getting-started","title":"Getting Started","text":"<p>Review the information on the Getting Started for a complete overview of the pipeline. The tutorial below will use test data available as part of the pipeline in the assets folder that runs on any HPC environment and was primarily tested using singularity container. All example code will assume you are running v3.0.0 of the pipeline, using test data available on GitHub.</p> <p>A. Change launch directory to the CDCgov/aquascope folder after your git clone or nextflow pull the pipeline.</p> <p>B. CDC-Users Only Your NXF_WORK, NXF_CONDA_CACHEDIR, NXF_SINGULARITY_CACHEDIR &amp; NXF_TEMP are set to Scratch folder as soon as you module load Nextflow. To override the defults, please manually set these environemental variables in ~/.bashrc.</p> <p>C. CDC-Users Only Please check with your <code>HPC infrastructure Team</code> for custom config files. We have a <code>rosalind</code> cluster config to run this pipeline and please reach out to <code>SciComp</code> for additional help.</p>"},{"location":"user-guide/test-info/#decide-the-test-to-perform","title":"Decide the test to perform","text":"<p>The pipeline includes three different entry points (View Getting Started for more information) and three different data inputs (Illumina, ONT, BAM). Determine which test meets your needs.</p> <p>A. Test Illumina Input  Test samplesheet is included in the .assets/ directory. The <code>test_illumina</code> profile will automatically configure this input.</p> <pre><code>### CDC Internal Users\nnextflow run \\\nmain.nf \\\n-profile test_illumina,singularity,scicomp_rosalind \\\n-entry AQUASCOPE\n\n### All Other Users\nnextflow run \\\nmain.nf \\\n-profile test_illumina,&lt;docker,singularity,nf-core institutional config&gt; \\\n-entry AQUASCOPE\n</code></pre> <p>B. Test ONT Input  Test samplesheet is included in the .assets/ directory. The <code>test_ont</code> profile will automatically configure this input.</p> <pre><code>### CDC Internal Users\nnextflow run \\\nmain.nf \\\n-profile test_ont,singularity,scicomp_rosalind \\\n-entry AQUASCOPE\n\n### All Other Users\nnextflow run \\\nmain.nf \\\n-profile test_ont,&lt;docker,singularity,nf-core institutional config&gt; \\\n-entry AQUASCOPE\n</code></pre> <p>C. Test BAM Input  Test samplesheet is included in the .assets/ directory. The <code>test_bams</code> profile will automatically configure this input.</p> <p><pre><code>### CDC Internal Users\nnextflow run \\\nmain.nf \\\n-profile test_bams,singularity,scicomp_rosalind \\\n-entry AQUASCOPE\n\n### All Other Users\nnextflow run \\\nmain.nf \\\n-profile test_bams,&lt;docker,singularity,nf-core institutional config&gt; \\\n-entry AQUASCOPE\n</code></pre> D. Test Iontorrent Input Test samplesheet is included in the .assets/ directory. The <code>test_illumina</code> profile will automatically configure this input.</p> <pre><code>### CDC Internal Users\nnextflow run \\\nmain.nf \\\n-profile test_iontorrent,singularity,scicomp_rosalind \\\n-entry AQUASCOPE\n\n### All Other Users\nnextflow run \\\nmain.nf \\\n-profile test_iontorrent,&lt;docker,singularity,nf-core institutional config&gt; \\\n-entry AQUASCOPE\n</code></pre>"},{"location":"user-guide/troubleshooting/","title":"Troubleshooting","text":""}]}